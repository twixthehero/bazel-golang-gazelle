load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@bazel_gazelle//:def.bzl", "gazelle")

# use the import path of the library
# gazelle:prefix krythera.com/example
gazelle(name = "gazelle")

# Update the go_repository rules defined in the Bazel workspace.
gazelle(
    name = "gazelle-update-repos",
    args = [
        # from_file should be an absolute path to a go.mod from repository root
        "-from_file=example/go.mod",

        # to_macro is the repository root-relative file which stores generated go_repository rules for Bazel
        "-to_macro=deps.bzl%go_dependencies",

        # optionally remove unused dependencies from the above deps.bzl. leave commented if using gazelle across multiple projects' packages within a Bazel workspace
        # "-prune",
    ],
    command = "update-repos",
)

# auto generated by Gazelle

go_library(
    name = "example_lib",
    srcs = ["main.go"],
    importpath = "krythera.com/example",
    visibility = ["//visibility:private"],
    deps = ["@com_github_withmandala_go_log//:go-log"],
)

go_binary(
    name = "example",
    embed = [":example_lib"],
    visibility = ["//visibility:public"],
)
